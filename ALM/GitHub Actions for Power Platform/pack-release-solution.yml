name: build-release-solution
# Reusable workflow
# upload the solution to the GitHub artifacts and deploy to the PROD environment
on:
  workflow_dispatch:
    inputs: 
      
      #Values are set by the caller
      #caller sample: release-action-call.ymnl
     
     #Change this value
      solution_name:
        description: 'The solution name.'
        type: string
        default: ContosoDemo     
      solution_shipping_folder:
        description: 'folder name for staging the exported solution *do not change*'        
        type: string
        default: out/ship/
      solution_outbound_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        type: string
        default: out/solutions/
      solution_source_folder: 
       description: 'folder name to be created and checked in *do not change*'
       type: string
       default: solutions/
      solution_release_folder:
       description: 'folder where the released binaries are going to be hosted *do not change*'
       type: string
       default: out/release
      settings_folder:
        description: 'folder to keep deployment settings file'
        type: string
        default: solutions/Settings

      #Change this value
      PRODUCTION_ENVIRONMENT_URL:
        description: 'Production environment url.'
        type: string
        required: true
        default: 'https://org78d7afe6.crm.dynamics.com'
        
      

env:
#Secrets for authentication
  CLIENT_ID: ${{secrets.CLIENT_ID}}   
  TENANT_ID: ${{secrets.TENANT_ID}}   
  CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}


jobs:
  convert-to-managed:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
   
    - name: Install Power Platform Tools
      id: install-power-platform-tools
      uses: microsoft/powerplatform-actions/actions-install@v1
      with:
       pac-version-override: 1.29.11

    - uses: actions/checkout@v2
      with:
        lfs: true
       
    - name: Pack solution
      uses: microsoft/powerplatform-actions/pack-solution@v1
      with:
        solution-folder: ${{ inputs.solution_source_folder}}/${{ inputs.solution_name }}
        solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}_managed.zip
        solution-type: Managed


    - name: Upload the ready to ship solution to GH artifact store
      uses: actions/upload-artifact@v2
      with:
        name: managedSolutions
        path: ${{ inputs.solution_outbound_folder}}

    - name: Upload the Deployment settings file to GH artifact store
      uses: actions/upload-artifact@v2
      with:
        name: DeploymentSettings
        path: ${{ inputs.settings_folder}}/${{ inputs.solution_name }}.json
  release-to-staging:
    needs: [ convert-to-managed ]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
        
    - name: Install Power Platform Tools
      id: install-power-platform-tools
      uses: microsoft/powerplatform-actions/actions-install@v1
      with:
       pac-version-override: 1.29.11

    - name: Fetch the ready to ship solution from GH artifact store
      uses: actions/download-artifact@v2
      with:
        name: managedSolutions
        path: ${{ inputs.solution_release_folder}}
    - name: Fetch the deployment settings file from GH artifact store
      uses: actions/download-artifact@v2
      with:
        name: DeploymentSettings
        path: ${{ inputs.solution_release_folder}}
    - name: Import solution to prod env
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{inputs.PRODUCTION_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{env.CLIENT_SECRET}}
        tenant-id: ${{env.TENANT_ID}}
        solution-file: ${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}_managed.zip
        force-overwrite: true
        publish-changes: true
        use-deployment-settings-file: true
        deployment-settings-file: ${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}.json
        
         
